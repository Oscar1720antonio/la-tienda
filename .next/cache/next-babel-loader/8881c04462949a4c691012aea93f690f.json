{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Footer from '../components/Layout/Footer/Footer';\nimport SiteBreadcrumb from '../components/Common/Breadcumb';\nimport TeamMain from '../components/Team/TeamMain';\nimport HeaderStyleTwo from \"../components/Layout/Header/HeaderStyleTwo\";\n\nvar Team = /*#__PURE__*/function (_Component) {\n  _inherits(Team, _Component);\n\n  var _super = _createSuper(Team);\n\n  function Team() {\n    _classCallCheck(this, Team);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Team, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(HeaderStyleTwo, null), __jsx(SiteBreadcrumb, {\n        pageTitle: \"Team Member\"\n      }), __jsx(TeamMain, null), __jsx(Footer, null));\n    }\n  }]);\n\n  return Team;\n}(Component);\n\nexport default Team;","map":null,"metadata":{},"sourceType":"module"}