{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nvar url = \"https://bangladevs.us16.list-manage.com/subscribe/post?u=a31c01f1ea7e047420474b3c5&amp;id=2729646c8f\"; //custom form\n\nvar CustomForm = function CustomForm(_ref) {\n  var status = _ref.status,\n      message = _ref.message,\n      onValidated = _ref.onValidated;\n  var email;\n\n  var submit = function submit() {\n    return email && email.value.indexOf(\"@\") > -1 && onValidated({\n      EMAIL: email.value\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"form-wrap\"\n  }, status === \"sending\" && __jsx(\"div\", {\n    style: {\n      color: \"blue\"\n    }\n  }, \"sending...\"), status === \"error\" && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    }\n  }), status === \"success\" && __jsx(\"div\", {\n    style: {\n      color: \"green\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    }\n  }), __jsx(\"input\", {\n    ref: function ref(node) {\n      return email = node;\n    },\n    type: \"email\",\n    placeholder: \"Enter your emaill\"\n  }), __jsx(\"button\", {\n    className: \"btn\",\n    onClick: submit\n  }, \"Subscribe\"));\n}; // use the render prop and your custom form\n\n\nvar CustomSubscribeForm = function CustomSubscribeForm() {\n  return __jsx(MailchimpSubscribe, {\n    url: url,\n    render: function render(_ref2) {\n      var subscribe = _ref2.subscribe,\n          status = _ref2.status,\n          message = _ref2.message;\n      return __jsx(\"div\", {\n        className: \"subscribes-form\"\n      }, __jsx(CustomForm, {\n        onSubmitted: function onSubmitted(formData) {\n          return subscribe(formData);\n        }\n      }), status === \"sending\" && __jsx(\"div\", {\n        style: {\n          color: \"blue\"\n        }\n      }, \"sending...\"), status === \"error\" && __jsx(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        dangerouslySetInnerHTML: {\n          __html: message\n        }\n      }), status === \"success\" && __jsx(\"div\", {\n        style: {\n          color: \"green\"\n        }\n      }, \"Subscribed !\"));\n    }\n  });\n};\n\nexport default CustomSubscribeForm;","map":null,"metadata":{},"sourceType":"module"}